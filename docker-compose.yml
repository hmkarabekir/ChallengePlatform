version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: challenge_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Python FastAPI Backend
  python-api:
    build:
      context: ./backend/python-api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/challenge_platform
      - REDIS_URL=redis://redis:6379
      - ALGORAND_NETWORK=testnet
      - ALGORAND_API_URL=https://testnet-api.algonode.cloud
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./backend/python-api:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Node.js Services
  node-services:
    build:
      context: ./backend/node-services
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - ALGORAND_NETWORK=testnet
      - ALGORAND_API_URL=https://testnet-api.algonode.cloud
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend/node-services:/app
    command: npm run dev

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_URL=http://localhost:3001
    depends_on:
      - python-api
      - node-services
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
